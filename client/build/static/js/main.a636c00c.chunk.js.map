{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/DishItem/index.js","utils/queries.js","assets/spinner.gif","components/DishList/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","utils/mutations.js","components/PrepperDishes/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/CategoryMenu/index.js","pages/Customer.js","App.js","serviceWorker.js","index.js"],"names":["idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_DISHES","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","dishes","cartOpen","cart","dish","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","DishItem","item","image","name","price","quantity","className","to","style","textDecoration","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_DISHES","gql","QUERY_MY_DISHES","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","DishList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","dishIds","i","push","variables","LOGIN","ADD_DISH","REMOVE_DISH","ADD_ORDER","ADD_USER","DishListPrepper","userData","myDishes","useMutation","deleteDish","handleDeleteDish","error","dishId","Home","useState","description","ingredients","formState","setFormState","addDish","handleFormSubmit","event","preventDefault","alert","mutationResponse","handleChange","show","setShow","handleClose","id","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","InputGroup","Text","FormControl","DropdownButton","variant","title","Dropdown","Item","href","Check","label","Button","Footer","Card","Img","ImgOverlay","width","PrepperDishes","Detail","useParams","currentDish","setCurrentDish","indexedDishes","disabled","p","Jumbotron","children","height","clear","paddingTop","textAlign","NoMatch","Login","email","password","login","htmlFor","Signup","addUser","firstName","lastName","address","city","phoneNumber","Nav","textSizeAdjust","verticalAlign","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","CategoryMenu","categoryData","Customer","Carousel","Caption","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a636c00c.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('at-your-door', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('dishes', { keyPath: '_id' });\n      db.createObjectStore('myDishes', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_DISHES = \"UPDATE_DISHES\";\n\n\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from 'react';\nimport {\n  UPDATE_DISHES,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update dishes array. We use the action.dishes property and spread it's contents into the new array.\n    case UPDATE_DISHES:\n      return {\n        ...state,\n        dishes: [...action.dishes],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.dish],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.dishes],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((dish) => {\n          if (action._id === dish._id) {\n            dish.purchaseQuantity = action.purchaseQuantity;\n          }\n          return dish;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `dish._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((dish) => {\n        return dish._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useDishReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useDishReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useDishReducer({\n    dishes: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction DishItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        dish: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/dishes/${_id}`} style={{ textDecoration: 'none' }}>\n        <img \n        className=\"dish-img-size\"\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p style={{ textDecoration: 'none' }}>{name}</p>\n      </Link>\n      <div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default DishItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_DISHES = gql`\n  query getDishes($category: ID) {\n    dishes(category: $category) {\n      _id\n      name\n      description\n      image\n      price\n      ingredients\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_MY_DISHES = gql`\n  query getMyDishes($prepper: ID) {\n    myDishes(prepper: $prepper) {\n      _id\n      name\n      description\n      image\n      price\n      ingredients\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($dishes: [ID]!) {\n    checkout(dishes: $dishes) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_DISHES = gql`\n  {\n    dishes {\n      _id\n      name\n      description\n      price\n      ingredients\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      email\n      password\n      address\n      state\n      city\n      phoneNumber\n      orders {\n        _id\n        purchaseDate\n        dishes {\n          _id\n          name\n          description\n          image\n          price\n          ingredients\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport DishItem from '../DishItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_DISHES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_DISHES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction DishList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_DISHES);\n\n  useEffect(() => {\n    console.log(\"--------Loading---------\")\n    console.log(data)\n    if (data) {\n      dispatch({\n        type: UPDATE_DISHES,\n        dishes: data.dishes,\n      });\n      data.dishes.forEach((dish) => {\n        idbPromise('dishes', 'put', dish);\n      });\n    } else if (!loading) {\n      idbPromise('dishes', 'get').then((dishes) => {\n        dispatch({\n          type: UPDATE_DISHES,\n          dishes: dishes,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterDishes() {\n    if (!currentCategory) {\n      return state.dishes;\n    }\n\n    return state.dishes.filter(\n      (dishes) => dishes.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\" >\n      <h2>Our Food:  🥗</h2>\n      {state.dishes.length ? (\n        <div className=\"flex-row-customer dish-css\">\n          {filterDishes().map((dish) => (\n            <DishItem\n              key={dish._id}\n              _id={dish._id}\n              image={dish.image}\n              name={dish.name}\n              price={dish.price}\n              quantity={dish.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any dishes yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default DishList;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      console.log(item)\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      console.log(item)\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, dishes: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const dishIds = [];\n    console.log(state.cart);\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        dishIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { dishes: dishIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n           🛍\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          Shopping cart empty\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_DISH = gql`\n  mutation addDish($name: String!, $ingredients: String!, $price: String!, $category: String!, $description: String, $image: String) {\n    addDish(name: $name, ingredients: $ingredients, price: $price, category: $category, description: $description, image: $image) {\n      _id\n      name\n   }\n  }\n`;\n\nexport const REMOVE_DISH = gql`\n  mutation removeDish($dishId: ID!) {\n    removeDish( _id: $dishId) {\n      _id\n      name\n   }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($dishes: [ID]!) {\n    addOrder(dishes: $dishes) {\n      purchaseDate\n      dishes {\n        _id\n        name\n        description\n        price\n        ingredients\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n    $address: String!\n    $state: String!\n    $city: String!\n    $phoneNumber: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n      address: $address\n      state: $state\n      city: $city\n      phoneNumber: $phoneNumber\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport DishItem from '../DishItem';\nimport { useMyDishesContext } from '../../utils/GlobalState';\nimport { UPDATE_DISHES } from '../../utils/actions';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_MY_DISHES } from '../../utils/queries';\nimport { REMOVE_DISH } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction DishListPrepper() {\n  const { loading, data } = useQuery(QUERY_MY_DISHES);\n  const userData = data?.myDishes || {};\n\n\n  const [deleteDish, { error }] = useMutation(REMOVE_DISH);\n\n  const handleDeleteDish = async (dishId) => {\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n\n    if (!token) {\n      return false;\n    }\n\n\n    try {\n      console.log(dishId)\n      const { data } = await deleteDish({\n        variables: { dishId },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <div className=\"my-2\">\n  \n      {userData.length ? (\n        <div className=\"flex-row\">\n    \n          {userData.map((dish) => (\n            <div>\n            <DishItem\n              key={dish._id}\n              _id={dish._id}\n              image={dish.image}\n              name={dish.name}\n              price={dish.price}\n              quantity={dish.quantity}\n            />\n            <button onClick={() => handleDeleteDish(dish._id)}>Delete</button>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any dishes yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  )\n};\n\nexport default DishListPrepper;\n","import React from \"react\";\n\nimport DishList from \"../components/DishList\";\n// import CategoryMenu from \"../components/CategoryMenu\";\n\n\nimport Cart from \"../components/Cart\";\nimport '../pages/pagesCSS/HomePage.css';\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState } from \"react\";\nimport { InputGroup, FormControl, Dropdown, DropdownButton, Card} from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_DISH } from \"../utils/mutations\";\n\nimport PrepperDishes from \"../components/PrepperDishes\";\n\n\n\n\nconst Home = () => {\n\n\n  const [formState, setFormState] = useState({ name: '', description: '', image: '', price: '', category: '', ingredients: ''});\n  const [addDish, { error }] = useMutation(ADD_DISH);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n   alert(`sumbitted ${formState.name}`);\n   console.log('working')\n   console.log(formState)\n    try {\n      console.log(formState.name)\n      console.log(formState.price)\n      console.log(formState.category)\n      console.log(formState.ingredients)\n      console.log(formState.description)\n      console.log(formState.image)\n      const { mutationResponse } = await addDish({\n        variables: {\n          name: formState.name,\n          ingredients: formState.ingredients,\n          price: formState.price,\n          category: formState.category,\n          description: formState.description,\n          image: formState.image\n        },\n      });\n      console.log(mutationResponse);\n  \n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  \n \n\n\n\n  return (\n    <div className=\"homepage-container\" >\n\n     <div className='homepageBackground'>\n\n    <button>\n      \n        <Link to=\"/prepper\" className=\"prepperbtn\">\n        Click here to see your dishes\n            </Link>\n      </button>\n\n    </div> \n\n    <div>\n\n{/* add a dish div */}\n\n   <div className=\"prepper-module\">\n    <h1> Lets get started as a Prepper 🚀</h1>\n\n\n   \n      <button onClick={handleShow}  id='module-btn' >\n      Get prepping add a Dish!!🍲\n      </button>\n      </div>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add your dish here</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        \n        <Form onSubmit={handleFormSubmit}>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n {/* dish name */}\n  <InputGroup className=\"mb-3\">\n    <InputGroup.Text id=\"basic-addon1\"  >🍲</InputGroup.Text>\n    <FormControl name=\"name\"  onChange={handleChange}\n      placeholder=\"Dish Name\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon1\"\n    />\n      </InputGroup>\n    {/* description */}\n  <InputGroup className=\"mb-3\">\n    <InputGroup.Text id=\"basic-addon1\" >📝</InputGroup.Text>\n    <FormControl name=\"description\" onChange={handleChange}\n      placeholder=\"Dish Description\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon1\"\n    />\n  </InputGroup>\n{/* image */}\n  <InputGroup className=\"mb-3\">\n    <InputGroup.Text id=\"basic-addon1\" >🖼️</InputGroup.Text>\n    <FormControl name=\"image\" onChange={handleChange}\n      placeholder=\"URL\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon1\"\n    />\n  </InputGroup>\n{/* price */}\n<InputGroup className=\"mb-3\">\n    <InputGroup.Text >💰$</InputGroup.Text>\n\n    <InputGroup.Text >.00</InputGroup.Text>\n    <FormControl aria-label=\"Amount (to the nearest dollar)\" name='price'  onChange={handleChange}/>\n  </InputGroup>\n  {/* ingredients */}\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <FormControl type=\"\" name='ingredients' placeholder=\"🧂Ingredients\" onChange={handleChange} />\n  </Form.Group>\n\n\n{/* category */}\n<InputGroup className=\"mb-3\">\n    <DropdownButton  \n      variant=\"outline-secondary\"\n      title=\"🥘Dish Category\"\n      id=\"input-group-dropdown-1\"\n    >\n      <Dropdown.Item href=\"#\"></Dropdown.Item>\n      <Dropdown.Item href=\"#\">Vagetarian</Dropdown.Item>\n      <Dropdown.Item href=\"#\">Mexican</Dropdown.Item>\n      <Dropdown.Item href=\"#\">Chinese</Dropdown.Item>\n      <Dropdown.Item href=\"#\">Italian</Dropdown.Item>\n      <Dropdown.Item href=\"#\">Desserts</Dropdown.Item>\n      <Dropdown.Item href=\"#\">Beverages</Dropdown.Item>\n      <Dropdown.Item href=\"#\">Baked Goods</Dropdown.Item>\n    </DropdownButton>\n    <FormControl aria-label=\"Text input with dropdown button\" name='category' onChange={handleChange}/>\n  </InputGroup>\n\n\n\n\n\n  \n  </Form.Group>\n\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\" onClick={handleFormSubmit}>\n    Submit\n  </Button>\n</Form>\n        \n        \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n \n    \n\n\n\n \n   \n     </div>\n     <div className=\"prepper-benfits\">\n     <Card className=\"bg-dark text-white\">\n  <Card.Img src=\"images/cash.jpg\" alt=\"Card image\" />\n  <Card.ImgOverlay>\n    <Card.Title>Cash☘️</Card.Title>\n   \n    <Card.Text> Make some meal earn some extra cash!!</Card.Text>\n  </Card.ImgOverlay>\n</Card>\n\n<Card className=\"bg-dark text-white\">\n  <Card.Img src=\"images/schedule.jpg\" alt=\"Card image\" />\n  <Card.ImgOverlay>\n    <Card.Title>Own your schedule🗓</Card.Title>\n    <Card.Text>\n      Make meals on your own time and schedule them to be made at your own time!!\n    </Card.Text>\n \n  </Card.ImgOverlay>\n</Card>\n\n<Card className=\"bg-dark text-white\">\n  <Card.Img src=\"images/call.jpg\" alt=\"Card image\" />\n  <Card.ImgOverlay>\n    <Card.Title>Support at every turn📞</Card.Title>\n  \n    <Card.Text>Get support every step of the way reach out to us!</Card.Text>\n  </Card.ImgOverlay>\n</Card>\n\n\n\n\n     </div>\n   \n    <div className=\"our-dishes\"> \n     <h1>Your prepper dishes 🥣</h1>\n     <div style={{width: '100%'}}> \n     <PrepperDishes />\n     </div>\n\n     </div>\n\n \n\n     <div>\n  \n     <Cart />\n\n     </div> \n    </div> \n\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_DISHES,\n} from '../utils/actions';\nimport { QUERY_DISHES } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentDish, setCurrentDish] = useState({});\n\n  const { loading, data } = useQuery(QUERY_DISHES);\n\n  const { dishes, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (dishes.length) {\n      setCurrentDish(dishes.find((dish) => dish._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_DISHES,\n        dishes: data.dishes,\n      });\n\n      data.dishes.forEach((dish) => {\n        idbPromise('dishes', 'put', dish);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('dishes', 'get').then((indexedDishes) => {\n        dispatch({\n          type: UPDATE_DISHES,\n          dishes: indexedDishes,\n        });\n      });\n    }\n  }, [dishes, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (!itemInCart) {\n      dispatch({\n        type: ADD_TO_CART,\n        dish: { ...currentDish, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentDish, purchaseQuantity: 1 });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentDish._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentDish });\n  };\n\n  return (\n    <>\n      {currentDish && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Dishes</Link>\n\n          <h2>{currentDish.name}</h2>\n\n          <p>{currentDish.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentDish.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentDish._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentDish.image}`}\n            alt={currentDish.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"login-container my-1\">\n      <Link className=\"go-to-signup\" to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n        address: formState.address,\n        state: formState.state,\n        city: formState.city,\n        phoneNumber: formState.phoneNumber,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"login-container my-1\">\n      <Link className=\"go-to-signup\" to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"address\">Address:</label>\n          <input\n            placeholder=\"Your address here\"\n            name=\"address\"\n            type=\"address\"\n            id=\"address\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"state\">State:</label>\n          <input\n            placeholder=\"ie FL, GA, NY\"\n            name=\"state\"\n            type=\"state\"\n            id=\"state\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"city\">City:</label>\n          <input\n            placeholder=\"Your city here\"\n            name=\"city\"\n            type=\"city\"\n            id=\"city\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"phoneNumber\">Phone Number:</label>\n          <input\n            placeholder=\"123-456-7891\"\n            name=\"phoneNumber\"\n            type=\"phoneNumber\"\n            id=\"phoneNumer\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <div className=\"login-signup\">\n        <ul className=\"flex-row-signup\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"login-signup\">\n        <ul className=\"flex-row\" >\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            \n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row-header px-1\">\n      <h1>\n        <Link to=\"/\">\n          <img\n           style={{ width: 45 }}\n           className=\"ayd-logo-class\"\n           src=\"images/aydLogo.png\"\n           alt=\"Logo\"\n          />\n          <span style={{ textSizeAdjust: '10px', verticalAlign: 'middle'}}>   At Your Doorstep</span>\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const dishes = cart.map((item) => item._id);\n\n      if (dishes.length) {\n        const { data } = await addOrder({ variables: { dishes } });\n        const dishData = data.addOrder.dishes;\n\n        dishData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Dishes</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.dishes.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/dishes/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category: ⚙️</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from \"react\";\nimport DishList from \"../components/DishList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport '../pages/pagesCSS/HomePage.css';\nimport Button from \"react-bootstrap/Button\";\nimport Carousel from 'react-bootstrap/Carousel'\nimport '../pages/pagesCSS/CustomerPage.css';\n\n\n\nconst Customer = () => {\n  return (\n    <div className=\"homepage-container\" >\n\n   \n\n     <Carousel>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"images/food-bags.jpg\"\n      alt=\"First slide\"\n    />\n    <Carousel.Caption>\n      <h3>Feed your Family</h3>\n      <p>Sign up for tasty meals!</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"images/preped-food.jpg\"\n      alt=\"Second slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>Spice up your palete!!</h3>\n      <p>Try some truely authentic food from one of our preppers.</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"images/kitchen-food.jpg\"\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>Want to make some extra cash??</h3>\n      <p>Quick sign up to be a prepper to start earning.</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n</Carousel>\n\n    \n\n\n\n    <div className=\"customer-bottom\">\n\n\n\n    <h1>Add a dish to your Cart 🛒</h1>\n\n  \n  \n\n      <CategoryMenu />\n\n        <DishList />\n\n        </div>\n\n    \n  \n\n    \n\n      <Cart />\n\n    </div> \n  );\n};\n\nexport default Customer;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Customer from './pages/Customer';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route\n              path=\"/prepper\"\n              element={<Customer />}\n\n              />\n\n              <Route \n                path=\"/dishes/:id\" \n\n                element={<Detail />} \n              /> \n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}